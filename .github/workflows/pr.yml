name: PR Checks

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

# Cancel older in-flight runs for the same PR/branch
concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  tests:
    name: Install & Test
    runs-on: windows-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      # Project-specific install & test commands
      - name: Install Python dependencies
        run: python -u run.py install

      - name: Install Node dependencies
        run: npm ci

      - name: Lint Python
        continue-on-error: true
        run: |
          python -m pip install flake8
          python -m flake8 src/ --max-line-length=100 --ignore=E203,W503

      - name: Lint JavaScript
        continue-on-error: true
        run: |
          npm install -g eslint@8
          npx eslint@8 src/ --ext .js --config .eslintrc.js

      - name: Test Python (project-defined)
        run: |
          set -o pipefail
          python -u run.py test 2>&1 | tee pytest-output.txt

      - name: Test Node.js
        run: npm test

      - name: Upload test log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-output
          path: pytest-output.txt

  smoke-score:
    name: Smoke score (main only)
    if: github.event_name == 'push' # skip on PRs to avoid flakiness
    needs: tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Python dependencies
        run: python -u run.py install

      - name: Install Node dependencies
        run: npm ci

      - name: Score default URLs (non-blocking)
        continue-on-error: true
        env:
          LOG_LEVEL: "1"
        run: |
          python -u run.py score urls.txt > reports.ndjson
          echo "NDJSON lines: $(wc -l < reports.ndjson)"

      - name: Upload NDJSON
        uses: actions/upload-artifact@v4
        with:
          name: reports.ndjson
          path: reports.ndjson
