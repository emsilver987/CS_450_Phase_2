name: CD (main)

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Detect Terraform presence
      - name: Check for Terraform infra
        id: has_tf
        run: |
          if ls infra/envs/dev/*.tf >/dev/null 2>&1; then
            echo "present=true" >> $GITHUB_OUTPUT
          else
            echo "present=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy infrastructure via Terraform
        if: steps.has_tf.outputs.present == 'true'
        working-directory: infra/envs/dev
        run: |
          terraform init -input=false
          terraform plan -out=tfplan -input=false
          terraform apply -auto-approve tfplan

      - name: Smoke test API health
        if: steps.has_tf.outputs.present == 'true'
        working-directory: infra/envs/dev
        run: |
          API_URL=$(terraform output -raw api_gateway_url)
          curl -f "$API_URL/health" || exit 1

      - name: Smoke test validator ECS service
        if: steps.has_tf.outputs.present == 'true'
        working-directory: infra/envs/dev
        run: |
          VALIDATOR_URL=$(terraform output -raw validator_url)
          curl -f "$VALIDATOR_URL/health" || exit 1

      - name: Skip deploy (infra not found)
        if: steps.has_tf.outputs.present == 'false'
        run: echo "No infra at infra/envs/dev â€“ skipping deploy."
